{"ast":null,"code":"var _jsxFileName = \"/Users/conmou/Project/pi/pi-front/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nfunction sortby(a, b) {\n  return a.temp - b.temp;\n}\nfunction sortData(dataArray) {\n  return dataArray.sort(function (a, b) {\n    return Date.parse(b.date.replace(/-/g, \"/\")) - Date.parse(a.date.replace(/-/g, \"/\"));\n  });\n}\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\n// class App extends React.Component {\n// \t// Constructor\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\titems: [],\n// \t\t\tDataisLoaded: false\n// \t\t};\n// \t}\n// \t// ComponentDidMount is used to\n// \t// execute the code\n// \t// 取得排序資料的api /orderdata\n// \tcomponentDidMount() {\n// \t\tfetch(\"http://localhost:5001/api\")\n// \t\t\t.then((res) => res.json())\n// \t\t\t.then((json) => {\n// \t\t\t\tthis.setState({\n// \t\t\t\t\titems: json,\n// \t\t\t\t\tDataisLoaded: true\n// \t\t\t\t});\n// \t\t\t})\n// \t}\n\n// \trender() {\n// \t\tconst { DataisLoaded, items } = this.state;\n// \t\tif (!DataisLoaded) return \n//       <div>\n// \t\t\t  <h1> no no conmou </h1> \n//       </div> ;\n//     // const sort = items.sort(sortData)\n// \t\treturn (\n//       <div className = \"App\">\n//         <h1> get api success </h1> {\n//           items.map((item) => (\n//           <ol key = { item.id } >\n//             temp: { item.temp },\n//             hunidity: { item.hunidity},\n//             date: { item.date }\n//             </ol>\n//           ))\n//         }\n//       </div>\n// \t  );\n//   }\n// }\nfunction App() {\n  _s();\n  const [chartData, setChartData] = useState({\n    datasets: []\n  });\n  const [chartOptions, setChartOptions] = useState({});\n  useEffect(() => {\n    setChartData({\n      labels: [\"John\", \"Kevin\", \"Geroge\", \"Micheal\", \"Oreo\"],\n      datasets: [{\n        label: \"Whom'st let the dogs out\",\n        data: [12, 55, 34, 120, 720],\n        borderColor: \"rgb(53, 162, 235)\",\n        backgroundColor: \"rgba(53, 162, 235, 0.4)\"\n      }]\n    });\n    setChartOptions({\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"top\"\n        },\n        title: {\n          display: true,\n          text: \"Whom'st let the dogs out\"\n        }\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      options: chartOptions,\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dIP9DTwBhGID+ag3h29oG1nbzqg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","sortby","a","b","temp","sortData","dataArray","sort","Date","parse","date","replace","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","register","App","chartData","setChartData","datasets","chartOptions","setChartOptions","labels","label","data","borderColor","backgroundColor","responsive","plugins","legend","position","title","display","text"],"sources":["/Users/conmou/Project/pi/pi-front/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction sortby(a,b){\n  return a.temp-b.temp;\n}\nfunction sortData(dataArray){\n  return dataArray.sort(function(a,b){\n    return Date.parse(b.date.replace(/-/g,\"/\")) - Date.parse(a.date.replace(/-/g,\"/\"))\n  });\n}\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\n \nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n// class App extends React.Component {\n// \t// Constructor\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\titems: [],\n// \t\t\tDataisLoaded: false\n// \t\t};\n// \t}\n// \t// ComponentDidMount is used to\n// \t// execute the code\n// \t// 取得排序資料的api /orderdata\n// \tcomponentDidMount() {\n// \t\tfetch(\"http://localhost:5001/api\")\n// \t\t\t.then((res) => res.json())\n// \t\t\t.then((json) => {\n// \t\t\t\tthis.setState({\n// \t\t\t\t\titems: json,\n// \t\t\t\t\tDataisLoaded: true\n// \t\t\t\t});\n// \t\t\t})\n// \t}\n  \n// \trender() {\n// \t\tconst { DataisLoaded, items } = this.state;\n// \t\tif (!DataisLoaded) return \n//       <div>\n// \t\t\t  <h1> no no conmou </h1> \n//       </div> ;\n//     // const sort = items.sort(sortData)\n// \t\treturn (\n//       <div className = \"App\">\n//         <h1> get api success </h1> {\n//           items.map((item) => (\n//           <ol key = { item.id } >\n//             temp: { item.temp },\n//             hunidity: { item.hunidity},\n//             date: { item.date }\n//             </ol>\n//           ))\n//         }\n//       </div>\n// \t  );\n//   }\n// }\nfunction App() {\n  const [chartData, setChartData] = useState({\n    datasets: [],\n  });\n \n  const [chartOptions, setChartOptions] = useState({});\n \n  useEffect(() => {\n    setChartData({\n      labels: [\"John\", \"Kevin\", \"Geroge\", \"Micheal\", \"Oreo\"],\n      datasets: [\n        {\n          label: \"Whom'st let the dogs out\",\n          data: [12, 55, 34, 120, 720],\n          borderColor: \"rgb(53, 162, 235)\",\n          backgroundColor: \"rgba(53, 162, 235, 0.4)\",\n        },\n      ],\n    });\n    setChartOptions({\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"top\",\n        },\n        title: {\n          display: true,\n          text: \"Whom'st let the dogs out\",\n        },\n      },\n    });\n  }, []);\n \n  return (\n    <div className=\"App\">\n      <Bar options={chartOptions} data={chartData} />\n    </div>\n  );\n  }\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAElB,SAASC,MAAM,CAACC,CAAC,EAACC,CAAC,EAAC;EAClB,OAAOD,CAAC,CAACE,IAAI,GAACD,CAAC,CAACC,IAAI;AACtB;AACA,SAASC,QAAQ,CAACC,SAAS,EAAC;EAC1B,OAAOA,SAAS,CAACC,IAAI,CAAC,UAASL,CAAC,EAACC,CAAC,EAAC;IACjC,OAAOK,IAAI,CAACC,KAAK,CAACN,CAAC,CAACO,IAAI,CAACC,OAAO,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACP,CAAC,CAACQ,IAAI,CAACC,OAAO,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC;EACpF,CAAC,CAAC;AACJ;AAEA,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AAAC;AAEtCP,OAAO,CAACQ,QAAQ,CACdP,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,CACP;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC;IACzCyB,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACdyB,YAAY,CAAC;MACXI,MAAM,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC;MACtDH,QAAQ,EAAE,CACR;QACEI,KAAK,EAAE,0BAA0B;QACjCC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAC5BC,WAAW,EAAE,mBAAmB;QAChCC,eAAe,EAAE;MACnB,CAAC;IAEL,CAAC,CAAC;IACFL,eAAe,CAAC;MACdM,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,QAAQ,EAAE;QACZ,CAAC;QACDC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,GAAG;MAAC,OAAO,EAAEb,YAAa;MAAC,IAAI,EAAEH;IAAU;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC3C;AAER;AAAC,GAtCMD,GAAG;AAAA,KAAHA,GAAG;AAuCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}